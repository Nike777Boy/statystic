import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import os
import statsmodels.api as sm

# Убедитесь, что путь к файлу правильный
file_path = 'stata.csv'  # Замените 'path_to_your_csv_file.csv' на фактический путь к вашему файлу

# Проверка существования файла
if not os.path.exists(file_path):
    print(f"Файл не найден по пути: {file_path}")
else:
    # 1. Загрузка данных из CSV-файла
    data = pd.read_csv(file_path)

    # Удаление столбца "Отметка времени"
    if 'Отметка времени' in data.columns:
        data = data.drop(columns=['Отметка времени'])

    # Очистка названий столбцов от пробелов в начале и в конце
    data.columns = data.columns.str.strip()

    # Очистка значений внутри столбцов (удаление лишних пробелов)
    for col in data.columns:
        data[col] = data[col].astype(str).str.strip()

    # Преобразование текстовых данных в числовые с помощью кодирования
    for col in data.columns:
        data[col] = pd.factorize(data[col])[0]

    # 2. Создание гистограмм для каждого вопроса
    questions = [
        'Ваш уровень образования в области IT?',
        'Какой у вас уровень знаний в IT?',
        'Как часто вы сталкиваетесь с задачами, связанными с программированием или анализом данных?',
        'Для каких целей вы используете ИИ?',
        'Как вы оцениваете простоту использования ИИ-инструментов?',
        'Насколько ИИ помогает вам улучшить успеваемость?',
        'Сталкивались ли вы с ошибками ИИ при решении задач?',
        'Как ИИ влияет на вашу производительность?',
        'Какую часть своей работы вы доверяете ИИ?',
        'Вы используете ИИ для подготовки к экзаменам?',
        'Считаете ли вы использование ИИ честным в учебном процессе?',
        'На сколько ИИ улучшает вашу способность понимать сложные темы?',
        'Как вы относитесь к использованию ИИ в учебе?',
        'Хотели бы вы больше интеграции ИИ в учебный процесс?',
        'Считаете ли вы ИИ незаменимым для студентов IT?',
        'Какова ваша общая оценка ИИ в IT-образовании?'
    ]

    for question in questions:
        if question in data.columns:
            plt.figure(figsize=(10, 6))
            sns.histplot(data[question], kde=True)
            plt.title(question)
            plt.xlabel('Ответы')
            plt.ylabel('Частота')
            plt.show()

    # 3. Описательная статистика для каждого вопроса
    summary_stats = data.describe(include='all')

    # 4. Корреляционный анализ между переменными
    correlation_matrix = data.corr()

    # Визуализация корреляционной матрицы
    plt.figure(figsize=(12, 8))
    sns.heatmap(correlation_matrix, annot=True, cmap='coolwarm')
    plt.title('Корреляционная матрица')
    plt.show()

    # 5. Регрессионный анализ зависимости одной переменной от другой (пример)
    X = sm.add_constant(
        data['Как часто вы сталкиваетесь с задачами, связанными с программированием или анализом данных?'])
    y = data['Как вы оцениваете простоту использования ИИ-инструментов?']

    model = sm.OLS(y, X).fit()
    predictions = model.predict(X)

    # Вывод результатов регрессии
    print(model.summary())

    # 6. Дополнительные визуализации
    plt.figure(figsize=(10, 6))
    sns.scatterplot(x='Как часто вы сталкиваетесь с задачами, связанными с программированием или анализом данных?',
                    y='Как вы оцениваете простоту использования ИИ-инструментов?', data=data)
    plt.title('Зависимость оценки простоты использования ИИ от частоты столкновения с задачами программирования')
    plt.xlabel('Частота столкновения с задачами программирования')
    plt.ylabel('Оценка простоты использования ИИ')
    plt.show()
